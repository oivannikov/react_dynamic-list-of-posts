{"version":3,"sources":["components/PostsList/PostsList.jsx","api/api.js","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","api/posts.js","App.jsx","index.js"],"names":["PostsList","posts","viewPostUser","setPostDetails","postId","setPostId","className","map","userId","title","id","key","onClick","handleClick","type","BASE_URL","getPostComments","a","fetch","responce","json","result","data","comments","filterComments","filter","comment","deleteComment","commentId","method","NewCommentForm","setComments","useState","name","setName","email","setEmail","body","setBody","handleSubmit","event","preventDefault","JSON","stringify","addComment","then","onSubmit","placeholder","value","onChange","e","target","PostDetails","postDetails","hideComent","setHideComment","useEffect","length","deleteComments","filterPostsByUserId","post","getPostDetails","postsId","App","setPosts","selectedUser","setSelectedUser","selectedPostId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.098a0f60.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\n\nexport const PostsList = ({\n  posts,\n  viewPostUser,\n  setPostDetails,\n  postId,\n  setPostId\n}) => {\n  function handleClick(id) {\n    if (postId === id) {\n      setPostId(0);\n      setPostDetails([]);\n    } else {\n      setPostId(id);\n      viewPostUser(id);\n    }\n  }\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n      <ul className=\"PostsList__list\">\n      {\n        posts.map(({ userId, title, id }) => {\n          return (\n            <li\n              className=\"PostsList__item\"\n              key={id}\n            >\n              <div>\n                <b>[User #{userId}]:</b>\n                {title}\n              </div>\n              <button\n                onClick={() => {\n                  handleClick(id);\n                }}\n                type=\"button\"\n                className=\"PostsList__button button\"\n              >\n                {id === postId ? \"Close\" : \"Open\"}\n              </button>\n            </li>\n          )\n        })\n      }\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    userId: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  })).isRequired,\n  viewPostUser: PropTypes.func.isRequired,\n  postId: PropTypes.number.isRequired,\n  setPostId: PropTypes.func.isRequired,\n  setPostDetails: PropTypes.func.isRequired,\n};\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport async function getPostComments(postId) {\n  const responce = await fetch(`${BASE_URL}/comments/`);\n  const result = await responce.json();\n  const comments = await result.data;\n  const filterComments = comments.filter(comment => comment.postId === postId);\n\n  return filterComments;\n}\n\nexport function addComment(name, email, body, postId) {\n  return fetch(`${BASE_URL}/comments/`, {\n    method: 'POST',\n    body: JSON.stringify({\n      name,\n      email,\n      body,\n      postId,\n    }),\n  });\n}\n\nexport function deleteComment(commentId) {\n  return fetch(`${BASE_URL}/comments/${commentId}`, {\n    method: 'DELETE',\n  });\n}\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport { getPostComments, addComment } from '../../api/comments';\n\nexport const NewCommentForm = ({ setComments, postId}) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (name && email && body) {\n      addComment(name, email, body, postId)\n        .then(() => getPostComments(postId)\n          .then(setComments));\n\n      setName('');\n      setEmail('');\n      setBody('');\n    }\n  }\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(event) => handleSubmit(event)}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type body here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={(e) => setBody(e.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a body\n      </button>\n    </form>\n  )\n};\n","import React, { useState, useEffect } from 'react';\nimport './PostDetails.scss';\nimport PropTypes from 'prop-types';\n\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostComments, deleteComment } from '../../api/comments';\n\nexport const PostDetails = ({ postDetails, postId }) => {\n  const { title, body, id } = postDetails;\n  const [comments, setComments] = useState([]);\n  const [hideComent, setHideComment] = useState(true);\n\n  useEffect(() => {\n    getPostComments(postId)\n      .then(comments => setComments(comments));\n  }, [comments]);\n\n  function habdleButton() {\n    setHideComment(() => !hideComent);\n  }\n\n  async function deleteComments(commentId) {\n    await deleteComment(commentId);\n  }\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n      { id && (\n        <>\n          <section className=\"PostDetails__post\">\n            <h3>{title}</h3>\n            <p>{body}</p>\n          </section>\n\n          <section className=\"PostDetails__comments\">\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => habdleButton()}\n            >\n              {\n                `${!hideComent ? `Show` : `Hide`} ${comments.length} commnets`\n              }\n            </button>\n\n            <ul className=\"PostDetails__list\">\n              {\n                hideComent && comments.map(comment  => (\n                  <li className=\"PostDetails__list-item\">\n                    <button\n                      type=\"button\"\n                      className=\"PostDetails__remove-button button\"\n                      onClick={() => deleteComments(comment.id)}\n                    >\n                      X\n                    </button>\n                    <p>{ comment.name }</p>\n                    <p>{ comment.body }</p>\n                  </li>\n                ))\n              }\n            </ul>\n          </section>\n\n          <section>\n            <div className=\"PostDetails__form-wrapper\">\n              <NewCommentForm\n                setComments={setComments}\n                postId={postId}\n              />\n            </div>\n          </section>\n        </>\n      )}\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  postDetails: PropTypes.arrayOf(PropTypes.shape({\n    body: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  })).isRequired,\n};\n","import { BASE_URL } from './api';\n\nexport async function selectedPostId(userId) {\n  const responce = await fetch(`${BASE_URL}/posts`);\n  const result = await responce.json();\n  const posts = await result.data;\n\n  if (+userId === 0) {\n    return posts;\n  }\n\n  const filterPostsByUserId = posts.filter(post => post.userId === +userId);\n\n  return filterPostsByUserId;\n}\n\nexport async function getPostDetails(postsId) {\n  const responce = await fetch(`${BASE_URL}/posts/${postsId}`);\n  const result = await responce.json();\n  const post = await result.data;\n\n  return post;\n}\n","import React, {useState, useEffect} from 'react';\n\nimport './App.scss';\nimport './styles/general.scss';\n\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { selectedPostId, getPostDetails } from './api/posts';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [postDetails, setPostDetails] = useState([]);\n  const [postId, setPostId] = useState(0);\n\n  useEffect(() => {\n    selectedPostId(selectedUser)\n      .then(setPosts);\n  }, [selectedUser]);\n\n  async function viewPostUser(id) {\n    const result = await getPostDetails(id);\n\n    setPostDetails(() => result);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={(e) => {setSelectedUser(e.target.value)}}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            viewPostUser={viewPostUser}\n            posts={posts}\n            postDetails={postDetails}\n            selectedUser={selectedUser}\n            setPostDetails={setPostDetails}\n            postId={postId}\n            setPostId={setPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails\n            postDetails={postDetails}\n            postId={postId}\n          />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}